<?xml version="1.0"?>

<project name="common-build" basedir="." default="common-redeploy">

	<!-- Setting dist path specific to jobs. -->
	<property name="module.dist.dir"
		value="${batch.base.dir}/dist/test/jobs/${ant.project.name}" />
	<property file="${batch.base.dir}/build.properties" />

	<!-- Override/set  paths to module specific paths -->
	<property name="module.classes.dir"
		value="${batch.base.dir}/dist/test/classes/${ant.project.name}" />
	<property name="module.javadoc.dir" value="${batch.base.dir}/${javadoc.dir}" />

	<property name="module.java.dir" value="java" />
	<property name="module.scala.dir" value="impl/scala" />
	<property name="module.conf.dir" value="conf" />

	<property name="module.distconf.dir" value="${module.dist.dir}" />
	<property name="module.distjar.dir" value="${module.dist.dir}" />
	<property name="module.jar.name" value="${module.distjar.dir}/${ant.project.name}.jar" />

	<!--
		<echo message="batch.base.dir path: ${batch.base.dir}"/> <echo
		message="module.dist.dir path: ${module.dist.dir}"/> <echo
		message="module.classes.dir path: ${module.classes.dir}"/> <echo
		message="module.javadoc.dir path: ${module.javadoc.dir}"/> <echo
		message="module.jar.name path: ${module.jar.name}"/>
	-->

	<path id="main-classpath">
		<pathelement path="${module.classes.dir}" />
	</path>

	<path id="scala-source-path">
		<pathelement path="${module.scala.dir}" />
	</path>

	<!-- macro to delete and recreate a directory -->
	<macrodef name="replace-dir">
		<attribute name="dir" />
		<sequential>
			<delete dir="@{dir}" />
			<mkdir dir="@{dir}" />
		</sequential>
	</macrodef>

	<target name="init">
		<path id="build.classpath">
			<!--<pathelement location="${your.path}"   />-->
			<pathelement location="${build.dir}" />
		</path>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${batch.base.dir}/${lib.dir}/ant-contrib-1.0b3.jar" />
			</classpath>
		</taskdef>
	</target>

	<target name="common-deploy" depends="common-jar"
		description="build the jar file and copy job confs to dist.">
		<echo message="Copying jobs/properties file in: ${module.distconf.dir}" />
		<echo message="building job jar in: ${module.distjar.dir}" />
	</target>

	<target name="common-undeploy" depends="common-clean"
		description="clean the dist and remove jar and conf." />

	<target name="common-redeploy" depends="common-undeploy, common-deploy"
		description="Clean and Build jar files and copy config to dist." />

	<target name="common-clean" description="Delete generated files.">
		<delete dir="${module.dist.dir}" />
		<delete dir="${module.classes.dir}" />
		<delete dir="${module.javadoc.dir}" />
	</target>

	<target name="common-build" description="Compile main source tree java files">
		<!-- Build common/azkaban-app target -->
		<mkdir dir="${module.classes.dir}" />
		<!-- copy non-java files to classes dir to load from classpath -->
		<copy todir="${module.classes.dir}">
			<fileset dir="${module.java.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac fork="true" destdir="${module.classes.dir}"
			target="1.6" debug="true" deprecation="true" failonerror="true">
			<src path="${module.java.dir}" />
			<classpath refid="main-classpath" />
		</javac>
	</target>

	<!--
		currently jar/copyconf writes to same directory hence we cant clean
		them. hack for now
	-->
	<target name="common-jar" depends="common-build" description="Build server jar file">
		<mkdir dir="${module.distjar.dir}" />
		<antcall target="common-copyconf" />
		<jar destfile="${module.jar.name}">
			<!-- include pig scripts -->
			<fileset dir="">
				<include name="**/*.pig" />
			</fileset>

			<fileset dir="${module.classes.dir}">
				<include name="**/*.*" />
			</fileset>
			<!-- include src code for ide convenience -->
			<fileset dir="${module.java.dir}">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>

	<target name="common-copyconf" description="copy the job Conf files to dist.">
		<mkdir dir="${module.distconf.dir}" />
		<delete>
			<fileset dir="${module.distconf.dir}" includes="**/*.job" />
		</delete>
		<!-- copy conf files to dir -->
		<copy todir="${module.distconf.dir}">
			<fileset dir="${module.conf.dir}">
				<include name="*.*" />
				<include name="*/*.*" />
				<include name="*/*/*.*" />
				<include name="*/*/*/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="common-docs" description="Create complete Javadoc documentation">
		<replace-dir dir="${module.javadoc.dir}" />
		<javadoc sourcepath="${module.java.dir}" destdir="${module.javadoc.dir}"
			windowtitle="${display.name}" source="1.5" author="true" version="true"
			use="true" packagenames="*">
			<doctitle>${display.name}</doctitle>
			<classpath refid="main-classpath" />
		</javadoc>
	</target>

</project>
